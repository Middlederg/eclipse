@page "/"
@inject ShipAttack shipAttack

<PageTitle>Index</PageTitle>

<div class="p-10 rounded border-2 m-4">

    <div class="grid grid-cols-2">
        <div class="flex flex-col">
            @foreach (var shipType in battle.Ships.GroupBy(x => x.Type))
            {
                <div class="flex justify-between items-center space-y-4">
                    <div class="flex justify-between items-center space-x-2">
                        @foreach (var ship in shipType)
                        {
                            <ShipRenderer Ship="ship" Color="bg-blue-600" />
                        }
                    </div>

                    <div class="flex justify-between space-x-2">
                        <button type="button" class="@Styles.PrimaryButton" @onclick="() => Shoot(shipType.Key)">
                            Shoot
                        </button>
                        <button type="button" class="@Styles.PrimaryInlineButton" @onclick="() => Retreat(shipType.Key)">
                            Retreat
                        </button>
                    </div>
                </div>
            }

        </div>

        <div class="flex flex-col">

             @foreach (var shipType in battle.EnemyShips.GroupBy(x => x.Type))
            {
                <div class="flex justify-between items-center">
                    <div class="flex justify-between items-center space-x-2">
                        @foreach (var ship in shipType)
                        {
                            <ShipRenderer Ship="ship" Color="bg-red-600" />
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="bg-green-200">
    @foreach (var diceResult in lastResult)
    {
        <Dice DiceResult="diceResult" />
    }
</div>


@code {
    private Battle battle;

    private List<DiceResult> lastResult = new List<DiceResult>();

    protected override void OnInitialized()
    {
        battle = new Battle(
             new List<Ship>() { TerranShips.Interceptor, TerranShips.Interceptor, TerranShips.Cruiser },
             new List<Ship>() { PlantaShips.Interceptor, PlantaShips.Dreadnought, PlantaShips.Dreadnought }
         );
    }

    private void Shoot(ShipType type)
    {
        lastResult = new List<DiceResult>();
        foreach(var ship in battle.Ships.Where(x => x.Type == type))
        {
            var target = battle.GetEnemyShip();
            if (target is not null)
            {
                lastResult.AddRange(shipAttack.MakeAttack(ship, target));
            }
        }
    }

    private void Retreat(ShipType type)
    {
        
    }
}